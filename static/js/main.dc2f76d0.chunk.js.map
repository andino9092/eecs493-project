{"version":3,"sources":["Habit.js","HabitList/ListItem.js","HabitList/HabitTypeRadio.js","HabitList/HabitList.js","Calendar/CalendarDay.js","Calendar/Calendar.js","modals/AddHabitModal.js","modals/HabitInfoModal.js","App.js","index.js"],"names":["Habit","name","emoji","_classCallCheck","this","view","records","Set","_createClass","key","value","year","month","day","add","delete","has","habitInfo","thisMonth","thisYear","forEach","log","d","Date","getFullYear","getMonth","ListItem","props","_props$habit","habit","React","createElement","className","highlighted","onClick","setSelectedHabit","type","onChange","toggleItemView","checked","style","color","width","role","aria-label","toggleHabitInfoModal","HabitTypeRadio","habitTypeRadio","changeHabitType","HabitList","habitsToRender","itemList","goodHabits","badHabits","toggleAddHabitModal","map","index","ind","updateItemList","selectedHabit","CalendarDay","toggleLog","thisDate","date","today","setHours","isToday","emojiList","months","Calendar","_useState","useState","_useState2","_slicedToArray","calendar","setCalendar","useEffect","buildCalendar","firstDay","lastDay","increment","getDate","push","i","getDay","length","String","console","setCalendarMonth","setMonth","week","weekind","dayind","viewHabitsList","hasRecordForDate","delLog","addLog","AddHabitModal","habitName","setHabitName","_useState3","_useState4","selectedEmoji","setSelectedEmoji","show","habitType","htmlFor","id","e","target","EmojiPicker","height","emojiStyle","EmojiStyle","APPLE","onEmojiClick","emojiData","alert","Fragment","HabitInfoModal","setHabitInfo","getHabitData","deleteHabit","App","setHabitTypeRadio","_useState5","_useState6","calendarMonth","_useState7","_useState8","showAddHabitModal","setShowAddHabitModal","_useState9","_useState10","habitInfoChoice","setHabitInfoChoice","_useState11","_useState12","showHabitInfoModal","setShowHabitInfoModal","_useState13","_useState14","setItemList","newItemList","_objectSpread","splice","bool","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.dc2f76d0.chunk.js","sourcesContent":["class Habit {\n  constructor(name, emoji) {\n    this.name = name;\n    this.emoji = emoji;\n    this.view = true;\n    this.records = new Set();\n  }\n\n  addLog(year, month, day) {\n    this.records.add(year + \"/\" + month + \"/\" + day);\n  }\n\n  delLog(year, month, day) {\n    this.records.delete(year + \"/\" + month + \"/\" + day);\n  }\n\n  hasRecordForDate(year, month, day) {\n    return this.records.has(year + \"/\" + month + \"/\" + day);\n  }\n\n  getHabitData(year, month) {\n    let habitInfo = {\n      thisMonth: 0,\n      thisYear: 0,\n    };\n\n    this.records.forEach((log) => {\n      const d = new Date(log);\n      if (d.getFullYear() === year) {\n        habitInfo.thisYear += 1;\n        if (d.getMonth() === month) {\n          habitInfo.thisMonth += 1;\n        }\n      }\n    });\n\n    return habitInfo;\n  }\n}\n\nexport default Habit;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Habit from \"../Habit\";\n\nfunction ListItem(props) {\n  const { name, emoji, view } = props.habit;\n\n  return (\n    <li\n      className={\n        \"list-group-item d-flex align-items-center\" +\n        (props.highlighted ? \" highlighted\" : \"\")\n      }\n      onClick={props.setSelectedHabit}\n    >\n      <div className=\"checkbox-col d-flex justify-content-around\">\n        <input\n          className=\"form-check-input\"\n          type=\"checkbox\"\n          onChange={props.toggleItemView}\n          checked={view}\n        />\n      </div>\n      <div className=\"vr\" style={{ color: \"#adb5bd\", width: \"1.5px\" }}></div>\n      <div className=\"list-item\">\n        <span className=\"list-emoji\" role=\"img\" aria-label={emoji}>\n          {emoji}\n        </span>\n        <span className=\"m-0\">{name}</span>\n      </div>\n      <span className=\"info-button\" onClick={props.toggleHabitInfoModal}>ⓘ</span>\n    </li>\n  );\n}\n\nListItem.propTypes = {\n  habit: PropTypes.instanceOf(Habit),\n  toggleItemView: PropTypes.func.isRequired,\n  highlighted: PropTypes.bool.isRequired,\n  setSelectedHabit: PropTypes.func.isRequired,\n  toggleHabitInfoModal: PropTypes.func.isRequired\n};\n\nexport default ListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction HabitTypeRadio(props) {\n  return (\n    <ul className=\"nav nav-pills nav-fill mb-3\">\n      <li className=\"nav-item\">\n        <p\n          className={\"nav-link\" + (props.habitTypeRadio ? \" active\" : \"\")}\n          onClick={() => props.changeHabitType(true)}\n        >\n          Good Habits\n        </p>\n      </li>\n      <li className=\"nav-item\">\n        <p\n          className={\"nav-link\" + (props.habitTypeRadio ? \"\" : \" active\")}\n          onClick={() => props.changeHabitType(false)}\n        >\n          Bad Habits\n        </p>\n      </li>\n    </ul>\n  );\n}\n\nHabitTypeRadio.propTypes = {\n  habitTypeRadio: PropTypes.bool.isRequired,\n  changeHabitType: PropTypes.func.isRequired,\n};\n\nexport default HabitTypeRadio;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"./ListItem\";\nimport HabitTypeRadio from \"./HabitTypeRadio\";\n\nfunction HabitList(props) {\n  const habitsToRender = props.habitTypeRadio\n    ? props.itemList.goodHabits\n    : props.itemList.badHabits;\n  const toggleItemView = (ind, category) => {\n    category\n      ? (props.itemList.goodHabits[ind].view = !props.itemList.goodHabits[ind]\n          .view)\n      : (props.itemList.badHabits[ind].view = !props.itemList.badHabits[ind]\n          .view);\n    props.updateItemList();\n  };\n\n  return (\n    <div className=\"habit-list m-2\">\n      <HabitTypeRadio\n        habitTypeRadio={props.habitTypeRadio}\n        changeHabitType={props.changeHabitType}\n      />\n      <ul className=\"list-group list-group-flush\">\n        <li className=\"list-group-item add-item-row d-flex align-items-center\">\n          <div className=\"checkbox-col\">View</div>\n          <div\n            className=\"vr\"\n            style={{ color: \"#adb5bd\", width: \"1.5px\" }}\n          ></div>\n          <span\n            className=\"list-emoji\"\n            role=\"img\"\n            aria-label=\"Add new item\"\n            onClick={props.toggleAddHabitModal}\n          >\n            ➕\n          </span>\n          <p className=\"list-add-habit m-0\" onClick={props.toggleAddHabitModal}>\n            Add new item\n          </p>\n        </li>\n        {habitsToRender.map((habit, index) => (\n          <ListItem\n            habit={habit}\n            toggleItemView={() => toggleItemView(index, true)}\n            highlighted={props.selectedHabit === index}\n            setSelectedHabit={() => props.setSelectedHabit(index)}\n            toggleHabitInfoModal={() =>\n              props.toggleHabitInfoModal(props.habitTypeRadio, index)\n            }\n            key={index}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nHabitList.propTypes = {\n  itemList: PropTypes.object.isRequired,\n  updateItemList: PropTypes.func.isRequired,\n  selectedHabit: PropTypes.number.isRequired,\n  setSelectedHabit: PropTypes.func.isRequired,\n  habitTypeRadio: PropTypes.bool.isRequired,\n  changeHabitType: PropTypes.func.isRequired,\n  toggleAddHabitModal: PropTypes.func.isRequired,\n  toggleHabitInfoModal: PropTypes.func.isRequired,\n};\n\nexport default HabitList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction CalendarDay(props) {\n  const isToday = () => {\n    const thisDate = new Date(\n      props.date.getFullYear(),\n      props.date.getMonth(),\n      props.day\n    );\n    const today = new Date();\n\n    return thisDate.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0);\n  };\n\n  return (\n    <div className=\"cal-date col\" onClick={props.toggleLog}>\n      <p className={\"date-num\" + (isToday() ? \" today\" : \"\")}>{props.day}</p>\n      <div className=\"cal-emoji-area\">\n        {props.emojiList.map((emoji) => (\n          <span className=\"list-emoji\" key={\"emoji-\" + emoji + \"-\" + props.day}>\n            {emoji}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCalendarDay.propTypes = {\n  day: PropTypes.string.isRequired,\n  date: PropTypes.instanceOf(Date),\n  emojiList: PropTypes.array.isRequired,\n  toggleLog: PropTypes.func.isRequired,\n};\n\nexport default CalendarDay;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport CalendarDay from \"./CalendarDay\";\n\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nfunction Calendar(props) {\n  const [calendar, setCalendar] = useState([[]]);\n\n  useEffect(() => {\n    setCalendar(buildCalendar(props.date));\n  }, [props.date]);\n\n  const decrMonth = () => {\n    return props.date.setMonth(props.date.getMonth() - 1);\n  };\n\n  const incrMonth = () => {\n    return props.date.setMonth(props.date.getMonth() + 1);\n  };\n\n  const toggleLog = (day) => {\n    if (day === \"\") return;\n    const year = props.date.getFullYear();\n    const month = props.date.getMonth() + 1;\n    const habit = props.viewHabitsList[props.selectedHabit];\n    if (habit) {\n      if (habit.hasRecordForDate(year, month, day)) {\n        habit.delLog(year, month, day);\n      } else {\n        habit.addLog(year, month, day);\n      }\n      props.updateItemList();\n    }\n  };\n\n  const buildCalendar = (date) => {\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    let increment = 1;\n\n    const calendar = [];\n\n    while (increment <= lastDay.getDate()) {\n      calendar.push([]);\n      for (let i = 0; i < 7; ++i) {\n        if (increment === 1 && i < firstDay.getDay()) {\n          calendar[calendar.length - 1].push(\"\");\n        } else if (increment <= lastDay.getDate()) {\n          calendar[calendar.length - 1].push(String(increment));\n          increment += 1;\n        } else {\n          calendar[calendar.length - 1].push(\"\");\n        }\n      }\n    }\n\n    console.log(\"built new calendar\");\n\n    return calendar;\n  };\n\n  return (\n    <div className=\"calendar container\">\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <h3\n          className=\"arrow\"\n          onClick={() => props.setCalendarMonth(new Date(decrMonth()))}\n        >\n          &#60;\n        </h3>\n        <h4 className=\"cal-month\">\n          {months[props.date.getMonth()]} {props.date.getFullYear()}\n        </h4>\n        <h3\n          className=\"arrow\"\n          onClick={() => props.setCalendarMonth(new Date(incrMonth()))}\n        >\n          &#62;\n        </h3>\n      </div>\n      <div className=\"cal container\">\n        {calendar.map((week, weekind) => {\n          return (\n            <div className=\"cal-row row\" key={\"cal-week-\" + weekind}>\n              {week.map((day, dayind) => {\n                let emojiList = [];\n                props.viewHabitsList.forEach((habit) => {\n                  if (\n                    habit.view &&\n                    habit.hasRecordForDate(\n                      props.date.getFullYear(),\n                      props.date.getMonth() + 1,\n                      day\n                    )\n                  ) {\n                    emojiList.push(habit.emoji);\n                  }\n                });\n\n                return (\n                  <CalendarDay\n                    day={day}\n                    date={props.date}\n                    emojiList={emojiList}\n                    toggleLog={() => toggleLog(day)}\n                    key={\"cal-\" + weekind + \"-\" + dayind}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nCalendar.propTypes = {\n  date: PropTypes.instanceOf(Date),\n  setCalendarMonth: PropTypes.func.isRequired,\n  viewHabitsList: PropTypes.array.isRequired,\n  updateItemList: PropTypes.func.isRequired,\n  selectedHabit: PropTypes.number.isRequired,\n};\n\nexport default Calendar;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport EmojiPicker, { EmojiStyle } from \"emoji-picker-react\";\nimport { useState } from \"react\";\nimport Habit from \"../Habit\";\n\nfunction AddHabitModal(props) {\n  const [habitName, setHabitName] = useState(\"\");\n  const [selectedEmoji, setSelectedEmoji] = useState(\"😄\");\n\n  useEffect(() => {\n    setHabitName(\"\");\n    setSelectedEmoji(\"😄\");\n  }, [props.show]);\n\n  const handleInputChange = (e) => {\n    setHabitName(e.target.value);\n  };\n\n  const handleEmojiClick = (emojiData) => {\n    setSelectedEmoji(emojiData.emoji);\n  };\n\n  const handleAddHabit = () => {\n    if (habitName === \"\") {\n      alert(\"Habit name must not be empty!\");\n    } else {\n      if (props.habitType) {\n        props.itemList.goodHabits.push(new Habit(habitName, selectedEmoji));\n      } else {\n        props.itemList.badHabits.push(new Habit(habitName, selectedEmoji));\n      }\n      props.updateItemList();\n      props.toggleAddHabitModal();\n    }\n  };\n\n  return !props.show ? (\n    <></>\n  ) : (\n    <div className=\"overlay\">\n      <div className=\"add-habit-modal\">\n        <span\n          className=\"close-modal\"\n          role=\"img\"\n          onClick={props.toggleAddHabitModal}\n          aria-label=\"Close modal\"\n        >\n          ✖️\n        </span>\n        <h4 className=\"modal-title\">\n          Add {props.habitType ? \"Good\" : \"Bad\"} Habit to Track\n        </h4>\n        <div className=\"modal-input-wrapper d-flex justify-content-around\">\n          <div>\n            <label htmlFor=\"habit-name\">Name</label>\n            <div className=\"d-flex gap-4 align-items-center\">\n              <input\n                className=\"habit-name-input\"\n                id=\"habit-name\"\n                type=\"text\"\n                onChange={handleInputChange}\n              />\n              <span className=\"bold\">Selected Emoji</span>\n              <span\n                className=\"habit-emoji\"\n                role=\"img\"\n                aria-label={selectedEmoji}\n              >\n                {selectedEmoji}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"emoji-picker\">\n          <EmojiPicker\n            width=\"120%\"\n            height=\"25em\"\n            emojiStyle={EmojiStyle.APPLE}\n            onEmojiClick={handleEmojiClick}\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"add-habit-btn btn\"\n          onClick={handleAddHabit}\n        >\n          Add Habit\n        </button>\n      </div>\n    </div>\n  );\n}\n\nAddHabitModal.propTypes = {\n  toggleAddHabitModal: PropTypes.func.isRequired,\n  itemList: PropTypes.object.isRequired,\n  updateItemList: PropTypes.func.isRequired,\n  habitType: PropTypes.bool.isRequired,\n};\n\nexport default AddHabitModal;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Habit from \"../Habit\";\n\nfunction HabitInfoModal(props) {\n  const [habitInfo, setHabitInfo] = useState({});\n\n  useEffect(() => {\n    const date = new Date();\n    if (props.habit) {\n      setHabitInfo(\n        props.habit.getHabitData(date.getFullYear(), date.getMonth())\n      );\n    }\n  }, [props.show]);\n\n  return !props.show ? (\n    <></>\n  ) : (\n    <div className=\"overlay\">\n      <div className=\"habit-info-modal\">\n        <span\n          className=\"close-modal\"\n          role=\"img\"\n          onClick={props.toggleHabitInfoModal}\n          aria-label=\"Close modal\"\n        >\n          ✖️\n        </span>\n        <div className=\"modal-title mb-2\">\n          <span\n            className=\"list-emoji\"\n            role=\"img\"\n            aria-label={props.habit.emoji}\n          >\n            {props.habit.emoji}\n          </span>\n          <span className=\"habit-title\">{props.habit.name}</span>\n        </div>\n        <div className=\"habit-data\">\n          <div className=\"d-flex justify-content-between\">\n            <span className=\"bold\">This month</span>\n            <span>{habitInfo.thisMonth}</span>\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <span className=\"bold\">This year</span>\n            <span>{habitInfo.thisYear}</span>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"del-habit-btn btn btn-danger\"\n          onClick={props.deleteHabit}\n        >\n          Delete Habit\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default HabitInfoModal;\n\nHabitInfoModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  toggleHabitInfoModal: PropTypes.func.isRequired,\n  habit: PropTypes.instanceOf(Habit),\n  deleteHabit: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Habit from \"./Habit\";\nimport HabitList from \"./HabitList/HabitList\";\nimport Calendar from \"./Calendar/Calendar\";\nimport AddHabitModal from \"./modals/AddHabitModal\";\nimport HabitInfoModal from \"./modals/HabitInfoModal\";\n\nfunction App() {\n  const [habitTypeRadio, setHabitTypeRadio] = useState(true);\n  const [selectedHabit, setSelectedHabit] = useState(0);\n  const [calendarMonth, setCalendarMonth] = useState(new Date());\n  const [showAddHabitModal, setShowAddHabitModal] = useState(false);\n  const [habitInfoChoice, setHabitInfoChoice] = useState({});\n  const [showHabitInfoModal, setShowHabitInfoModal] = useState(false);\n  const [itemList, setItemList] = useState({\n    goodHabits: [\n      new Habit(\"Cooked at home\", \"👨‍🍳\"),\n      new Habit(\"Went to the gym\", \"🏋️\"),\n    ],\n    badHabits: [],\n  });\n\n  useEffect(() => {\n    itemList.goodHabits[0].addLog(2023, 5, 1);\n    itemList.goodHabits[0].addLog(2023, 5, 11);\n    itemList.goodHabits[1].addLog(2023, 5, 11);\n    updateItemList();\n  }, []);\n\n  const updateItemList = () => {\n    const newItemList = { ...itemList };\n    setItemList(newItemList);\n  };\n\n  const changeHabitType = (bool) => {\n    setHabitTypeRadio(bool);\n    setSelectedHabit(0);\n  };\n\n  const deleteHabit = () => {\n    habitInfoChoice.habitType\n      ? itemList.goodHabits.splice(habitInfoChoice.index, 1)\n      : itemList.badHabits.splice(habitInfoChoice.index, 1);\n    updateItemList();\n    toggleHabitInfoModal(false, 0);\n  };\n\n  const toggleAddHabitModal = () => {\n    setShowAddHabitModal(!showAddHabitModal);\n  };\n\n  const toggleHabitInfoModal = (type, index) => {\n    setHabitInfoChoice({ habitType: type, index: index });\n    setShowHabitInfoModal(!showHabitInfoModal);\n  };\n\n  return (\n    <div className=\"App\">\n      <AddHabitModal\n        show={showAddHabitModal}\n        toggleAddHabitModal={toggleAddHabitModal}\n        itemList={itemList}\n        updateItemList={updateItemList}\n        habitType={habitTypeRadio}\n      />\n      <HabitInfoModal\n        show={showHabitInfoModal}\n        toggleHabitInfoModal={toggleHabitInfoModal}\n        habit={\n          habitInfoChoice.habitType\n            ? itemList.goodHabits[habitInfoChoice.index]\n            : itemList.badHabits[habitInfoChoice.index]\n        }\n        deleteHabit={deleteHabit}\n      />\n      <div className=\"navigation d-flex\"></div>\n      <div className=\"d-flex\">\n        <HabitList\n          itemList={itemList}\n          updateItemList={updateItemList}\n          selectedHabit={selectedHabit}\n          setSelectedHabit={setSelectedHabit}\n          habitTypeRadio={habitTypeRadio}\n          changeHabitType={changeHabitType}\n          toggleAddHabitModal={toggleAddHabitModal}\n          toggleHabitInfoModal={toggleHabitInfoModal}\n        />\n        <Calendar\n          date={calendarMonth}\n          setCalendarMonth={setCalendarMonth}\n          viewHabitsList={\n            habitTypeRadio ? itemList.goodHabits : itemList.badHabits\n          }\n          updateItemList={updateItemList}\n          selectedHabit={selectedHabit}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}